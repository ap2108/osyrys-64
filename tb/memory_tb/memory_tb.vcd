$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $scope module memory_tb $end
   $var wire 1 G clk $end
   $var wire 1 # rst_n $end
   $var wire 1 $ cpu_valid $end
   $var wire 1 6 cpu_ready $end
   $var wire 1 % cpu_write_enable $end
   $var wire 64 & cpu_address [63:0] $end
   $var wire 64 ( cpu_write_data [63:0] $end
   $var wire 64 7 cpu_read_data [63:0] $end
   $var wire 8 * cpu_byte_enable [7:0] $end
   $var wire 1 + npu_valid $end
   $var wire 1 9 npu_ready $end
   $var wire 1 , npu_write_enable $end
   $var wire 64 - npu_address [63:0] $end
   $var wire 64 / npu_write_data [63:0] $end
   $var wire 64 : npu_read_data [63:0] $end
   $var wire 8 1 npu_byte_enable [7:0] $end
   $var wire 4 2 burst_len [3:0] $end
   $var wire 1 3 burst_mode $end
   $scope module dut $end
    $var wire 32 I WORDS [31:0] $end
    $var wire 8 J mem_init [7:0] $end
    $var wire 1 G clk $end
    $var wire 1 # rst_n $end
    $var wire 1 $ cpu_valid $end
    $var wire 1 6 cpu_ready $end
    $var wire 64 & cpu_address [63:0] $end
    $var wire 64 ( cpu_write_data [63:0] $end
    $var wire 8 * cpu_byte_enable [7:0] $end
    $var wire 1 % cpu_write_enable $end
    $var wire 64 7 cpu_read_data [63:0] $end
    $var wire 1 + npu_valid $end
    $var wire 1 9 npu_ready $end
    $var wire 64 - npu_address [63:0] $end
    $var wire 64 / npu_write_data [63:0] $end
    $var wire 8 1 npu_byte_enable [7:0] $end
    $var wire 1 , npu_write_enable $end
    $var wire 64 : npu_read_data [63:0] $end
    $var wire 1 3 burst_mode $end
    $var wire 4 2 burst_len [3:0] $end
    $var wire 2 < state [1:0] $end
    $var wire 4 = burst_cnt [3:0] $end
    $var wire 64 > addr_latched [63:0] $end
    $var wire 1 @ is_write $end
    $var wire 1 A is_cpu $end
    $var wire 2 B latency_counter [1:0] $end
    $var wire 32 K MMIO_REGION [31:0] $end
    $scope module unnamedblk1 $end
     $var wire 32 C i [31:0] $end
    $upscope $end
    $scope module unnamedblk2 $end
     $var wire 32 D i [31:0] $end
    $upscope $end
    $scope module unnamedblk3 $end
     $var wire 32 E i [31:0] $end
    $upscope $end
    $scope module unnamedblk4 $end
     $var wire 32 F i [31:0] $end
    $upscope $end
    $scope module unnamedblk5 $end
     $var wire 32 H i [31:0] $end
    $upscope $end
   $upscope $end
   $scope module unnamedblk1 $end
    $var wire 32 4 i [31:0] $end
   $upscope $end
   $scope module unnamedblk2 $end
    $var wire 32 5 i [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
0%
b0000000000000000000000000000000000000000000000000000000000000000 &
b0000000000000000000000000000000000000000000000000000000000000000 (
b00000000 *
0+
0,
b0000000000000000000000000000000000000000000000000000000000000000 -
b0000000000000000000000000000000000000000000000000000000000000000 /
b00000000 1
b0000 2
03
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
06
b0000000000000000000000000000000000000000000000000000000000000000 7
09
b0000000000000000000000000000000000000000000000000000000000000000 :
b00 <
b0000 =
b0000000000000000000000000000000000000000000000000000000000000000 >
0@
0A
b00 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 D
b00000000000000000000000000000000 E
b00000000000000000000000000000000 F
0G
b00000000000000000000010000000000 H
b00000000000000000000010000000000 I
b00000000 J
b10000000000000000000000000000000 K
#5000
1G
#10000
0G
#12000
1#
#15000
1$
1%
b0000000000000000000000000000000000000000000000000000000000001000 &
b1100101011111110101110101011111011011110101011011011111011101111 (
b11111111 *
b01 <
b0000000000000000000000000000000000000000000000000000000000000001 >
1@
1A
b10 B
1G
#20000
0G
#25000
b01 B
1G
#30000
0G
#35000
b00 B
1G
#40000
0G
#45000
16
b00 <
b00000000000000000000000000001000 C
1G
#50000
0G
#55000
0$
0%
06
1G
#60000
0G
#65000
1$
b01 <
0@
b10 B
1G
#70000
0G
#75000
b01 B
1G
#80000
0G
#85000
b00 B
1G
#90000
0G
#95000
16
b1100101011111110101110101011111011011110101011011011111011101111 7
b00 <
1G
#100000
0G
#105000
0$
06
1G
#110000
0G
#115000
1+
1,
b0000000000000000000000000000000000000000000000000000000000010000 -
b0001000100100010001100110100010001010101011001100111011110001000 /
b11111111 1
b10 <
b0000000000000000000000000000000000000000000000000000000000000010 >
1@
0A
b10 B
1G
#120000
0G
#125000
b01 B
1G
#130000
0G
#135000
b00 B
1G
#140000
0G
#145000
19
b00 <
b00000000000000000000000000001000 E
1G
#150000
0G
#155000
0+
0,
09
1G
#160000
0G
#165000
1+
b10 <
0@
b10 B
1G
#170000
0G
#175000
b01 B
1G
#180000
0G
#185000
b00 B
1G
#190000
0G
#195000
19
b0001000100100010001100110100010001010101011001100111011110001000 :
b00 <
1G
#200000
0G
#205000
0+
b0100 2
13
09
1G
#210000
0G
#215000
1$
1%
b0000000000000000000000000000000000000000000000000000000100000000 &
b1010101010111011110011001101110100000000000000000000000000000000 (
b01 <
b0000000000000000000000000000000000000000000000000000000000100000 >
1@
1A
b10 B
1G
#220000
0G
#225000
b01 B
1G
#230000
0G
#235000
b00 B
1G
#240000
0G
#245000
b00000000000000000000000000000001 4
16
b0001 =
b00000000000000000000000000001000 D
1G
#250000
0G
#255000
b0000000000000000000000000000000000000000000000000000000100001000 &
b1010101010111011110011001101110100000000000000000000000000000001 (
b00000000000000000000000000000010 4
b0010 =
1G
#260000
0G
#265000
b0000000000000000000000000000000000000000000000000000000100010000 &
b1010101010111011110011001101110100000000000000000000000000000010 (
b00000000000000000000000000000011 4
b0011 =
1G
#270000
0G
#275000
b0000000000000000000000000000000000000000000000000000000100011000 &
b1010101010111011110011001101110100000000000000000000000000000011 (
b00000000000000000000000000000100 4
b0100 =
1G
#280000
0G
#285000
0$
0%
06
b00 <
1G
#290000
0G
#295000
1$
b0000000000000000000000000000000000000000000000000000000100000000 &
b01 <
b0000 =
0@
b10 B
1G
#300000
0G
#305000
b01 B
1G
#310000
0G
#315000
b00 B
1G
#320000
0G
#325000
16
b1010101010111011110011001101110100000000000000000000000000000000 7
b0001 =
1G
#330000
0G
#335000
b00000000000000000000000000000001 5
b1010101010111011110011001101110100000000000000000000000000000001 7
b0010 =
1G
#340000
0G
#345000
b0000000000000000000000000000000000000000000000000000000100001000 &
b1010101010111011110011001101110100000000000000000000000000000010 7
b0011 =
1G
#350000
0G
#355000
b00000000000000000000000000000010 5
b1010101010111011110011001101110100000000000000000000000000000011 7
b0100 =
1G
#360000
0G
#365000
b0000000000000000000000000000000000000000000000000000000100010000 &
06
b00 <
1G
#370000
0G
#375000
b00000000000000000000000000000011 5
b01 <
b0000 =
b0000000000000000000000000000000000000000000000000000000000100010 >
b10 B
1G
#380000
0G
#385000
b0000000000000000000000000000000000000000000000000000000100011000 &
b01 B
1G
#390000
0G
#395000
b00 B
1G
#400000
0G
#405000
16
b1010101010111011110011001101110100000000000000000000000000000010 7
b0001 =
1G
#410000
0G
#415000
b00000000000000000000000000000100 5
b1010101010111011110011001101110100000000000000000000000000000011 7
b0010 =
1G
#420000
0G
#425000
0$
03
b1010101010111011110011001101110100000000000000000000000000000010 7
b00 <
1G
#430000
0G
#435000
1$
b0000000000000000000000000000000010000000000000000000000000000000 &
06
b01 <
b0000 =
b0000000000000000000000000000000000010000000000000000000000000000 >
b10 B
1G
#440000
0G
#445000
0$
b01 B
1G
#450000
0G
#455000
1+
1,
b0000000000000000000000000000000010000000000000000000000000010000 -
b1101111010101101110010101111111010111110111011110001000100100010 /
b00 B
1G
#460000
0G
#465000
16
b0000000000000000000000000000000000000000000000000000000000000000 7
b00 <
1G
#470000
0G
#475000
06
b10 <
b0000000000000000000000000000000000010000000000000000000000000010 >
1@
0A
b10 B
1G
#480000
0G
#485000
b01 B
1G
#490000
0G
#495000
b00 B
1G
#500000
0G
#505000
19
b00 <
1G
#510000
0G
#515000
0+
0,
09
1G
#520000
0G
#525000
1+
b10 <
0@
b10 B
1G
#530000
0G
#535000
b01 B
1G
#540000
0G
#545000
b00 B
1G
#550000
0G
#555000
19
b1101111010101101110010101111111010111110111011110001000100100010 :
b00 <
1G
#560000
0G
#565000
0+
09
1G
#570000
0G
#575000
1G
#580000
0G
#585000
1G
#590000
0G
#595000
1G
#600000
0G
#605000
1G
#610000
0G
#615000
1G
